{"version":3,"sources":["config.js","utils/index.js","assets/images/pendingData.gif","assets/images/finish.png","utils/isMatchContactFilter.js","utils/isMatchCategoryFilter.js","actions/stepAction.js","constants/actionType.js","components/general/Navigation.js","actions/contactAction.js","components/icons/people.js","components/icons/notebook.js","components/icons/phone.js","components/icons/search.js","components/icons/mail.js","components/icons/index.js","components/information/Contact.js","components/information/ContactList.js","views/Information.js","components/templateMessage/SmsCategoryList.js","actions/messageAction.js","components/templateMessage/SmsEditing.js","views/Template.js","views/Complete.js","routes.js","components/App.js","reducers/contactReducer.js","reducers/messageReducer.js","reducers/stepReducer.js","reducers/templateReducer.js","reducers/index.js","index.js"],"names":["BASE_URL","module","exports","Contact","getContacts","Category","getAllCategory","Template","getTemplesByCategory","Proxy","sendMessage","redirectToLoginPage","redirectToLoginSfPage","redirectToMessagePage","filterContract","require","filterCategory","data","filterString","nameCondition","customerName","toLocaleLowerCase","includes","phoneCondition","phoneNumber","categoryName","switchStep","stepActive","type","payload","Navigation","onActiveStep","tag","props","window","location","href","className","onClick","exact","to","classNames","this","step","PureComponent","connect","state","stepReducer","dispatch","stepAction","submitContact","contact","width","height","viewBox","fill","xmlns","d","name","onChange","event","target","value","setState","onSubmit","preventDefault","onNextStep","goNextStep","dataUser","commitContact","nextProps","phone","action","method","contactReducer","contactAction","ListContact","filterData","isComponentMounted","errorSalesforce","customerInfomation","isPending","Axios","get","status","errorCode","placeholder","length","src","pending","alt","map","index","key","Information","SmsCategoryList","getTemplateByCategory","category","a","categoryActive","post","console","log","flagData","message","element","content","showTemplate","categoryList","smsTemplate","SmsEditing","onChangeCheckedBox","isSelectTemplate","onSelectTemplate","template","commitMessage","onSubmitMessage","onChangeMessage","isSelected","templateSelected","customerInfo","contentMessage","messageDone","lastMessage","id","checked","htmlFor","templateData","smsTemplates","defaultValue","templateReducer","messageReducer","messageAction","Complete","onFinalSubmit","finalMessage","customerPhone","isComplete","valid","isValid","finishDecoration","routes","path","main","activeRoute","route","component","App","Fragment","INIT","combineReducers","store","createStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b42f6215.chunk.js","sourcesContent":["const BASE_URL = 'http://localhost:8000/'\n\n\nmodule.exports.Contact = {\n  getContacts: BASE_URL + 'api/message/contactlist'\n}\n\nmodule.exports.Category = {\n  getAllCategory: BASE_URL + 'api/message/category/getall'\n}\n\nmodule.exports.Template = {\n  getTemplesByCategory: BASE_URL + 'api/message/template/getbycategory'\n}\n\nmodule.exports.Proxy = {\n  sendMessage: BASE_URL + 'api/proxy/send'\n}\n\nmodule.exports.redirectToLoginPage = BASE_URL + 'auth/login'\n\nmodule.exports.redirectToLoginSfPage = BASE_URL + 'auth/loginsf'\n\nmodule.exports.redirectToMessagePage = BASE_URL + 'message'","const filterContract = require('./isMatchContactFilter')\nconst filterCategory = require('./isMatchCategoryFilter')\n\nmodule.exports = {\n  filterContract,\n  filterCategory\n}","module.exports = __webpack_public_path__ + \"static/media/pendingData.a2680848.gif\";","module.exports = __webpack_public_path__ + \"static/media/finish.3a3d17ce.png\";","module.exports = (data, filterString) => {\n  let nameCondition = data.customerName.toLocaleLowerCase().includes(filterString.toLocaleLowerCase())\n  let phoneCondition = data.phoneNumber.toLocaleLowerCase().includes(filterString.toLocaleLowerCase())\n  return nameCondition === true || phoneCondition === true ? true : false\n}\n\n\n","module.exports = (categoryName, filterString) => {\n  let nameCondition = categoryName.toLocaleLowerCase().includes(filterString.toLocaleLowerCase())\n  return nameCondition === true ? true : false\n}\n\n\n","import * as type from '../constants/actionType'\n\nexport const switchStep = stepActive => {\n\n  return {\n    type: type.switchStep,\n    payload: stepActive\n  }\n}","// get message\nexport const completeMessage = \"COMPLETE_MESSAGE\";\nexport const showTemplate = \"SHOW_TEMPLATE\"\n// get contact \nexport const completeContact = \"COMPLETE_CONTACT\";\n// check step \nexport const switchStep = \"COMPLETE_STEP\";\n\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { NavLink } from 'react-router-dom'\nimport { redirectToMessagePage } from '../../config'\nimport classNames from 'classnames'\nimport * as stepAction from '../../actions/stepAction'\nimport './Navigation.css'\n\nclass Navigation extends PureComponent {\n\n  onActiveStep = tag => {\n    switch (tag) {\n      case 1:\n        this.props.switchStep(1)\n        break\n      case 2:\n        this.props.switchStep(2)\n        break\n      case 3:\n        this.props.switchStep(3)\n        break\n\n      default:\n        return\n    }\n  }\n\n  componentDidMount() {\n    if (window.location.href !== redirectToMessagePage) {\n      window.location = redirectToMessagePage\n    }\n  }\n  render() {\n    return (\n      <nav className='navigation'>\n        <div className='step-wrapper'>\n\n          <NavLink\n            onClick={() => this.onActiveStep(1)}\n            exact to='/message'\n            className='step flex-column-center'>\n            <h4\n              className={classNames({ 'active-step-h4': this.props.step.stepActive === 1 })}>\n              Nhập thông tin\n            </h4>\n            <div\n              className={classNames({ 'active-step-circle': this.props.step.stepActive === 1 })}>\n              <span>1</span>\n            </div>\n          </NavLink>\n\n          <NavLink\n            onClick={() => this.onActiveStep(2)}\n            exact to='/template'\n            className='step flex-column-center'>\n            <h4\n              className={classNames({ 'active-step-h4': this.props.step.stepActive === 2 })}>\n              Chọn mẫu tin nhắn\n            </h4>\n            <div className={classNames({ 'active-step-circle': this.props.step.stepActive === 2 })}>\n              <span>2</span>\n            </div>\n          </NavLink>\n\n          <NavLink\n            onClick={() => this.onActiveStep(3)}\n            exact to='/complete'\n            className='step flex-column-center'>\n            <h4\n              className={classNames({ 'active-step-h4': this.props.step.stepActive === 3 })}>\n              Hoàn thành\n            </h4>\n            <div className={classNames({ 'active-step-circle': this.props.step.stepActive === 3 })}>\n              <span>3</span>\n            </div>\n          </NavLink>\n        </div>\n        <div className='step-bar-wrapper'>\n          <div\n            className={\n              classNames(\n                {\n                  'step-bar': true,\n                  'step-bar-1': this.props.step.stepActive === 1,\n                  'step-bar-2': this.props.step.stepActive === 2,\n                  'step-bar-3': this.props.step.stepActive === 3,\n                })}>\n\n          </div>\n        </div>\n      </nav>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    step: state.stepReducer\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    switchStep: stepActive => {\n      dispatch(stepAction.switchStep(stepActive))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation)","import * as type from '../constants/actionType'\n\nexport const submitContact = contact => {\n  return {\n    type: type.completeContact,\n    payload: contact\n  }\n}","import React from 'react'\n\nexport default () => {\n  return (\n    <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M9.84877 9.63402C11.4352 9.63402 12.8089 9.15932 13.9313 8.22275C15.0537 7.28632 15.6227 6.14055 15.6227 4.81686C15.6227 3.49363 15.0537 2.3477 13.9311 1.41097C12.8085 0.474697 11.435 0 9.84877 0C8.26218 0 6.88884 0.474697 5.76643 1.41112C4.64402 2.34755 4.07486 3.49347 4.07486 4.81686C4.07486 6.14055 4.64402 7.28647 5.76661 8.2229C6.88921 9.15917 8.26273 9.63402 9.84877 9.63402V9.63402Z\" fill=\"black\" />\n      <path d=\"M19.9515 15.3789C19.9192 14.9892 19.8537 14.5641 19.7573 14.1152C19.66 13.6629 19.5347 13.2354 19.3848 12.8446C19.2298 12.4407 19.0191 12.0418 18.7587 11.6596C18.4884 11.2629 18.1709 10.9174 17.8146 10.6331C17.4421 10.3358 16.9859 10.0967 16.4585 9.92225C15.9328 9.74876 15.3503 9.66087 14.7272 9.66087C14.4825 9.66087 14.2458 9.74464 13.7888 9.99289C13.5075 10.1459 13.1785 10.3229 12.8112 10.5187C12.4972 10.6856 12.0718 10.842 11.5464 10.9836C11.0337 11.122 10.5132 11.1922 9.99945 11.1922C9.48571 11.1922 8.96538 11.122 8.45218 10.9836C7.92728 10.8422 7.50187 10.6858 7.18821 10.5189C6.82444 10.3249 6.49524 10.1479 6.20974 9.99274C5.75324 9.74448 5.5164 9.66071 5.27169 9.66071C4.64839 9.66071 4.06606 9.74876 3.54061 9.9224C3.01352 10.0965 2.5572 10.3356 2.18428 10.6333C1.82819 10.9177 1.51051 11.263 1.24056 11.6596C0.980302 12.0418 0.769611 12.4405 0.614518 12.8447C0.464729 13.2355 0.339448 13.6629 0.242149 14.1152C0.145765 14.5635 0.0802897 14.9887 0.0479178 15.3794C0.0160945 15.762 0 16.1592 0 16.5604C0 17.6044 0.397791 18.4496 1.18222 19.0729C1.95695 19.6879 2.98206 20 4.22865 20H15.7713C17.0179 20 18.0427 19.6881 18.8176 19.0729C19.6022 18.45 20 17.6047 20 16.5602C19.9998 16.1572 19.9835 15.7598 19.9515 15.3789V15.3789Z\" fill=\"black\" />\n    </svg>\n  )\n}\n\n","import React from 'react'\n\nexport default () => {\n  return (\n    <svg width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M28.913 0H3.4058C2.80551 0 2.31884 0.393516 2.31884 0.878906V4.74609H1.08696C0.486667 4.74609 0 5.13961 0 5.625C0 6.11039 0.486667 6.50391 1.08696 6.50391H2.31884V9.43359H1.08696C0.486667 9.43359 0 9.82711 0 10.3125C0 10.7979 0.486667 11.1914 1.08696 11.1914H2.31884V14.1211H1.08696C0.486667 14.1211 0 14.5146 0 15C0 15.4854 0.486667 15.8789 1.08696 15.8789H2.31884V18.8086H1.08696C0.486667 18.8086 0 19.2021 0 19.6875C0 20.1729 0.486667 20.5664 1.08696 20.5664H2.31884V23.4961H1.08696C0.486667 23.4961 0 23.8896 0 24.375C0 24.8604 0.486667 25.2539 1.08696 25.2539H2.31884V29.1211C2.31884 29.6065 2.80551 30 3.4058 30H28.913C29.5133 30 30 29.6065 30 29.1211V0.878906C30 0.393516 29.5133 0 28.913 0ZM27.8261 28.2422H4.49275V25.2539H5.72464C6.32493 25.2539 6.81159 24.8604 6.81159 24.375C6.81159 23.8896 6.32493 23.4961 5.72464 23.4961H4.49275V20.5664H5.72464C6.32493 20.5664 6.81159 20.1729 6.81159 19.6875C6.81159 19.2021 6.32493 18.8086 5.72464 18.8086H4.49275V15.8789H5.72464C6.32493 15.8789 6.81159 15.4854 6.81159 15C6.81159 14.5146 6.32493 14.1211 5.72464 14.1211H4.49275V11.1914H5.72464C6.32493 11.1914 6.81159 10.7979 6.81159 10.3125C6.81159 9.82711 6.32493 9.43359 5.72464 9.43359H4.49275V6.50391H5.72464C6.32493 6.50391 6.81159 6.11039 6.81159 5.625C6.81159 5.13961 6.32493 4.74609 5.72464 4.74609H4.49275V1.75781H27.8261V28.2422Z\" fill=\"black\" />\n      <path d=\"M9.27533 21.0938C9.27533 21.5791 9.762 21.9727 10.3623 21.9727C10.9626 21.9727 11.4492 21.5791 11.4492 21.0938C11.4492 18.7608 13.2111 16.3477 16.1594 16.3477C19.1077 16.3477 20.8695 18.7608 20.8695 21.0938C20.8695 21.5791 21.3562 21.9727 21.9565 21.9727C22.5568 21.9727 23.0434 21.5791 23.0434 21.0938C23.0434 18.8604 21.7827 16.5472 19.4739 15.3659C20.5922 14.6021 21.3043 13.461 21.3043 12.1875C21.3043 9.89361 18.9963 8.02734 16.1594 8.02734C13.3225 8.02734 11.0145 9.89361 11.0145 12.1875C11.0145 13.461 11.7266 14.6021 12.8449 15.3659C10.5361 16.5471 9.27533 18.8607 9.27533 21.0938ZM13.1884 12.1875C13.1884 10.8629 14.5212 9.78516 16.1594 9.78516C17.7976 9.78516 19.1304 10.8629 19.1304 12.1875C19.1304 13.5121 17.7976 14.5898 16.1594 14.5898C14.5212 14.5898 13.1884 13.5121 13.1884 12.1875Z\" fill=\"black\" />\n    </svg>\n\n\n  )\n}\n\n","import React from 'react'\n\nexport default () => {\n  return (\n    <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M5.32203 0.524455L8.11309 3.32139C9.1099 4.32029 8.71113 6.01843 7.41533 6.41799C6.51816 6.71766 6.01976 7.71657 6.21916 8.61558C6.71756 10.6134 9.30926 13.3104 11.4025 13.8099C12.2997 14.1096 13.2965 13.5102 13.5955 12.6112C13.9942 11.3126 15.6888 10.9131 16.6856 11.912L19.4767 14.7089C20.1744 15.508 20.1744 16.7067 19.4767 17.4059L17.5827 19.3039C15.5891 21.2018 10.3061 19.1041 5.62108 14.4092C0.936088 9.71437 -1.25692 4.42018 0.736727 2.42237L2.63066 0.524455C3.4281 -0.174817 4.62427 -0.174817 5.32203 0.524455Z\" fill=\"black\" />\n    </svg>\n  )\n}\n\n\n","import React from 'react'\n\nexport default () => {\n  return (\n    <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M19.8779 18.6996L14.0681 12.8897C15.17 11.5293 15.8334 9.79975 15.8334 7.9167C15.8334 3.55145 12.2819 0 7.91666 0C3.55142 0 0 3.55145 0 7.9167C0 12.2819 3.55146 15.8334 7.9167 15.8334C9.79975 15.8334 11.5293 15.17 12.8897 14.0681L18.6996 19.878C18.8624 20.0407 19.1261 20.0407 19.2889 19.878L19.878 19.2888C20.0407 19.1261 20.0407 18.8623 19.8779 18.6996ZM7.9167 14.1667C4.47025 14.1667 1.66668 11.3632 1.66668 7.9167C1.66668 4.47025 4.47025 1.66668 7.9167 1.66668C11.3632 1.66668 14.1667 4.47025 14.1667 7.9167C14.1667 11.3632 11.3632 14.1667 7.9167 14.1667Z\" fill=\"#514E59\" />\n    </svg>\n  )\n}\n","import React from 'react'\n\nexport default () => {\n  return (\n    <svg width=\"40\" height=\"30\" viewBox=\"0 0 40 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M38.5714 0H1.42859L20 16.062L38.7814 0.0450001C38.7127 0.0239064 38.6425 0.00887696 38.5714 0Z\" fill=\"#3A148A\" />\n      <path d=\"M20.9014 19.1639C20.375 19.6165 19.6178 19.6165 19.0914 19.1639L0 2.64893V28.5C0 29.3284 0.639592 30 1.4286 30H38.5714C39.3604 30 40 29.3284 40 28.5V2.87094L20.9014 19.1639Z\" fill=\"#3A148A\" />\n    </svg>\n  )\n}\n\n\n\n\n","import React from 'react'\nimport People from './people'\nimport Notebook from './notebook'\nimport Phone from './phone'\nimport Search from './search'\nimport Mail from './mail'\n\nexport default props => {\n  switch (props.name) {\n    case 'people':\n      return <People />\n    case 'notebook':\n      return <Notebook />\n    case 'phone':\n      return <Phone />\n    case 'search':\n      return <Search />\n    case 'mail':\n      return <Mail />\n    default:\n      return null\n  }\n}\n","\nimport React, { PureComponent } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport * as contactAction from '../../actions/contactAction'\nimport * as stepAction from '../../actions/stepAction'\nimport { connect } from 'react-redux'\nimport Icon from '../icons/index'\nimport './Contact.css'\n\nclass Contact extends PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      customerName: this.props.contact.customerName,\n      phoneNumber: this.props.contact.phoneNumber,\n      goNextStep: false\n    }\n  }\n\n  onChange = event => {\n    let customerName = event.target.name\n    let value = event.target.value\n    this.setState({\n      [customerName]: value\n    })\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      customerName: nextProps.contact.customerName,\n      phoneNumber: nextProps.contact.phoneNumber\n    })\n  }\n\n  onSubmit = event => {\n    event.preventDefault()\n  }\n\n  onNextStep = () => {\n    this.props.switchStep(2)\n\n    this.setState({\n      goNextStep: true\n    })\n    let dataUser = {\n      customerName: this.state.customerName,\n      phoneNumber: this.state.phoneNumber\n    }\n    this.props.commitContact(dataUser)\n  }\n\n  render() {\n    let name = this.state.customerName\n    let phone = this.state.phoneNumber\n    if (this.state.goNextStep) {\n      return <Redirect to='/template' />\n    }\n\n    return (\n      <div className='contact'>\n        <form action='/' method='post' onSubmit={this.onSubmit}>\n\n          <div className='customer-name-wraper'>\n            <label> Tên người nhận</label>\n            <div className='input-wraper'>\n              <Icon name='people' />\n              <input\n                value={name}\n                onChange={this.onChange}\n                type='text'\n                name=\"customerName\">\n              </input>\n            </div>\n          </div>\n\n          <div className='phone-number-wraper'>\n            <label> Số  điện thoại</label>\n            <div className='input-wraper'>\n              <Icon name='phone' />\n              <input\n                value={phone}\n                onChange={this.onChange}\n                type='number'\n                name=\"phoneNumber\">\n              </input>\n            </div>\n          </div>\n\n\n          <input onClick={this.onNextStep} type='submit' value='Xác nhận'></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    contact: state.contactReducer,\n  }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    commitContact: contact => {\n      dispatch(contactAction.submitContact(contact))\n    },\n    switchStep: stepActive => {\n      dispatch(stepAction.switchStep(stepActive))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contact)","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport * as contactAction from '../../actions/contactAction'\nimport Axios from 'axios'\nimport { filterContract } from '../../utils/index'\nimport {\n  Contact,\n  redirectToLoginPage,\n  redirectToLoginSfPage\n} from '../../config'\nimport pending from '../../assets/images/pendingData.gif'\nimport Icon from '../icons/index'\nimport './ContactList.css'\n\nclass ListContact extends PureComponent {\n\n  constructor(props) {\n    super(props)\n    this.isComponentMounted = false\n    this.state = {\n      errorSalesforce: '',\n      customerInfomation: [],\n      isPending: true,\n      filterData: ''\n    }\n  }\n\n  async componentDidMount() {\n    this.isComponentMounted = true\n    let { data } = await Axios.get(Contact.getContacts);\n\n    if (data.status === true && this.isComponentMounted === true) {\n      this.setState({\n        isPending: false,\n        customerInfomation: data.payload\n      })\n\n      return\n    }\n\n    if (!data.status && data.errorSalesforce) {\n      this.setState({\n        isPending: false,\n        errorSalesforce: data.errorSalesforce\n      })\n\n      return\n    }\n    else if (!data.status && data.errorCode === 1) {\n      window.location = redirectToLoginSfPage\n    }\n    else if (!data.status) {\n      window.location = redirectToLoginPage\n    }\n\n\n  }\n\n  componentWillUnmount() {\n    this.isComponentMounted = false\n  }\n\n  onChange = event => {\n    let value = event.target.value\n    this.setState({\n      filterData: value\n    })\n  }\n\n  render() {\n    return (\n      <div className='contact-list'>\n\n        <div className='search-contact-list'>\n          <Icon name='search' />\n          <input onChange={this.onChange} placeholder='Search your contacts'></input>\n        </div>\n\n\n        <div className='data-contact'>\n          {\n            this.state.errorSalesforce.length > 0 &&\n            <div className='error-saleforce-api'>\n              <span>{this.state.errorSalesforce}</span>\n            </div>\n          }\n          {\n            this.state.isPending === true &&\n            <div className='pending'> <img src={pending} alt='pending' /></div>\n          }\n          {\n            this.state.customerInfomation.map((data, index) => {\n              if (filterContract(data, this.state.filterData) === true) {\n                return (\n                  <div onClick={() => this.props.commitContact(data)} className='data-contact-item' key={index}>\n                    <Icon name='notebook'></ Icon>\n                    <div className='data-contact-payload'>\n                      <span> {data.customerName} </span>\n                      <span> {data.phoneNumber} </span>\n                    </div>\n                  </div>\n                )\n              }\n              return false\n            })\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    commitContact: contact => {\n      dispatch(contactAction.submitContact(contact))\n    }\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(ListContact)","import React, { PureComponent } from 'react';\nimport Contact from '../components/information/Contact'\nimport ContactList from '../components/information/ContactList'\nimport './Information.css'\n\nclass Information extends PureComponent {\n\n  render() {\n    return (\n      <div className='information' >\n        <Contact />\n        <ContactList />\n      </div>\n    )\n  }\n}\n\nexport default Information;\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport Axios from 'axios'\nimport classNames from 'classnames'\nimport { filterCategory } from '../../utils'\nimport Icon from '../icons/index'\nimport * as messageAction from '../../actions/messageAction'\nimport { Category, Template } from '../../config'\nimport pending from '../../assets/images/pendingData.gif'\nimport './SmsCategoryList.css'\n\n\nclass SmsCategoryList extends PureComponent {\n\n  constructor(props) {\n    super(props)\n    this.isComponentMounted = false\n    this.state = {\n      isPending: true,\n      filterData: '',\n      categoryActive: null,\n      categoryList: []\n    }\n  }\n\n  async componentDidMount() {\n    this.isComponentMounted = true\n    const { data } = await Axios.get(Category.getAllCategory)\n\n    if (data.status === true && this.isComponentMounted === true) {\n      this.setState({\n        categoryList: data.message,\n        isPending: false\n      })\n    }\n\n  }\n\n  componentWillUnmount() {\n    this.isComponentMounted = false\n  }\n\n  onChange = event => {\n    let value = event.target.value\n    this.setState({\n      filterData: value\n    })\n  }\n  getTemplateByCategory = async (category, index) => {\n    this.setState({\n      categoryActive: index\n    })\n    const { data } = await Axios.post(Template.getTemplesByCategory, {\n      categoryName: category\n    })\n\n    console.log(data)\n    if (data.status === true) {\n      let flagData = data.message.map((element) => {\n        return element.content\n      })\n\n      this.props.showTemplate(flagData)\n    }\n  }\n  render() {\n\n    return (\n      <div className='sms-category-list'>\n        <div className='search-category-list'>\n          <Icon name='search' />\n          <input onChange={this.onChange} placeholder='Search SMS Template'></input>\n        </div>\n        <div className='data-category'>\n          {\n            this.state.isPending === true &&\n            <div className='pending'> <img src={pending} alt='pending' /></div>\n          }\n          {\n            this.state.categoryList.map((category, index) => {\n              if (filterCategory(category.name, this.state.filterData) === true) {\n                return (\n                  <div\n                    className={classNames({\n                      'data-category-payload': true,\n                      'category-active': this.state.categoryActive === index\n                    })}\n                    key={index}\n                    onClick={() => this.getTemplateByCategory(category.name, index)}>\n\n                    <span>{category.name}</span>\n                  </div>\n                )\n              }\n              return\n            })\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    showTemplate: smsTemplate => {\n      dispatch(messageAction.showTemplate(smsTemplate))\n    }\n  }\n}\n\n\nexport default connect(null, mapDispatchToProps)(SmsCategoryList)","import * as type from '../constants/actionType'\n\nexport const showTemplate = smsTemplates => {\n  return {\n    type: type.showTemplate,\n    payload: smsTemplates\n  }\n}\n\nexport const commitMessage = message => {\n  return {\n    type: type.completeMessage,\n    payload: message\n  }\n}\n\n","import React, { PureComponent } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport * as messageAction from '../../actions/messageAction'\nimport * as stepAction from '../../actions/stepAction'\nimport classNames from 'classnames'\nimport Icon from '../icons/index'\nimport { connect } from 'react-redux'\nimport './SmsEditing.css'\n\n\nclass SmsEditing extends PureComponent {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      isSelectTemplate: true,\n      isSelected: false,\n      templateSelected: '',\n      goNextStep: false\n    }\n  }\n\n  onChangeCheckedBox = event => {\n    this.setState({\n      isSelectTemplate: event.target.value === '1' ? true : false\n    })\n  }\n\n  onSelectTemplate = template => {\n    this.props.commitMessage(template)\n    if (template) {\n      this.setState({\n        isSelectTemplate: false,\n      })\n    }\n  }\n\n  onSubmit = event => {\n    event.preventDefault()\n  }\n\n  onSubmitMessage = () => {\n    this.props.switchStep(3)\n    this.setState({\n      goNextStep: true\n    })\n  }\n\n  onChangeMessage = event => {\n    if (event) {\n      this.props.commitMessage(event.target.value)\n    }\n  }\n\n  turnBackTemplateSelection() {\n    this.setState({\n      isSelectTemplate: true\n    })\n  }\n\n  render() {\n\n    let { customerName, phoneNumber } = this.props.customerInfo\n    let contentMessage = this.props.messageDone.lastMessage\n\n    if (this.state.goNextStep) {\n      return <Redirect to='/complete' />\n    }\n\n    return (\n      <div className='sms-editing'>\n        <div className='sms-editing-control'>\n          <div className='contact-selected'>\n            <h4>Thông tin người nhận</h4>\n            <div>\n              <div className='customer-name-selected'>\n                <Icon name='people' />\n                <span> {customerName} </span>\n              </div>\n              <div className='phone-number-selected'>\n                <Icon name='phone' />\n                <span> {phoneNumber} </span>\n              </div>\n            </div>\n          </div>\n\n          <div className='checkbox-selection'>\n            <div className='follow-template'>\n              <input id='follow-template'\n                name='type-selection'\n                type='radio' value={1}\n                onChange={this.onChangeCheckedBox}\n                checked={this.state.isSelectTemplate} />\n              <label\n                htmlFor='follow-template'\n                className={classNames({ 'active-checked': this.state.isSelectTemplate === true })}>\n                Mẫu tin nhắn\n              </label>\n            </div>\n            <div className='compose-manual'>\n              <input id='compose-manual'\n                name='type-selection'\n                type='radio'\n                value={0}\n                onChange={this.onChangeCheckedBox}\n                checked={!this.state.isSelectTemplate} />\n\n              <label\n                htmlFor='compose-manual'\n                className={classNames({ 'active-checked': this.state.isSelectTemplate === false })}>\n                Trình biên soạn\n              </label>\n            </div>\n          </div>\n\n        </div>\n        {\n          this.state.isSelectTemplate === true &&\n          <div className='sms-template-wrap'>\n            {\n              this.props.templateData.smsTemplates.map((template, index) => {\n                return (\n                  <div className='sms-template-element' key={index}>\n                    <div onClick={() => this.onSelectTemplate(template)} className='select-template-button'>\n                      <Icon name='mail' />\n                    </div>\n                    <span>\n                      {\n                        template\n                      }\n                    </span>\n                  </div>\n                )\n              })\n            }\n          </div>\n        }\n        {\n          this.state.isSelectTemplate === false &&\n          <div className='compose-sms-wrap'>\n            <form onSubmit={this.onSubmit}>\n              <textarea onChange={event => this.onChangeMessage(event)} defaultValue={contentMessage} name='smscontent'>\n              </textarea>\n              <input onClick={this.onSubmitMessage} type='submit' value='Xác nhận'></input>\n            </form>\n          </div>\n        }\n\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    templateData: state.templateReducer,\n    customerInfo: state.contactReducer,\n    messageDone: state.messageReducer\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    commitMessage: message => {\n      dispatch(messageAction.commitMessage(message))\n    },\n    switchStep: stepActive => {\n      dispatch(stepAction.switchStep(stepActive))\n    }\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SmsEditing)\n","import React, { PureComponent } from 'react'\nimport SmsCategoryList from '../components/templateMessage/SmsCategoryList'\nimport SmsEditing from '../components/templateMessage/SmsEditing'\nimport './Template.css'\n\nclass Template extends PureComponent {\n  render() {\n    return (\n      <div className='template-suggestion'>\n        <SmsEditing />\n        <SmsCategoryList />\n      </div>\n    )\n  }\n}\n\nexport default Template;\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux'\nimport Axios from 'axios'\nimport { Proxy } from '../config'\nimport Icon from '../components/icons/index'\nimport finishDecoration from '../assets/images/finish.png'\nimport './Complete.css'\n\nclass Complete extends PureComponent {\n\n  constructor(props) {\n    super(props)\n\n    this.valid = true\n    this.state = {\n      isValid: true,\n      isComplete: false\n    }\n  }\n\n  onFinalSubmit = async () => {\n    let { phoneNumber, customerName } = this.props.customerInfo\n    let finalMessage = this.props.messageDone.lastMessage\n\n    await Axios.post(Proxy.sendMessage, {\n      customerName,\n      customerPhone: phoneNumber,\n      content: finalMessage\n    })\n\n    this.setState({\n      isComplete: true\n    })\n  }\n\n  render() {\n    let { customerName, phoneNumber } = this.props.customerInfo\n    let finalMessage = this.props.messageDone.lastMessage\n\n    // check valid input\n    if (customerName === '' || phoneNumber === '') {\n      this.valid = false\n      customerName = 'Chưa cung cấp'\n      phoneNumber = 'Chưa cung cấp'\n    }\n\n    if (finalMessage === '') {\n      this.valid = false\n    }\n\n    return (\n\n      <div className='complete'>\n        {\n          this.state.isComplete === false &&\n          <div className='final-info-wrap'>\n            <div className='customer-contact-info'>\n              <h4> Thông tin đã nhập </h4>\n              <div className='customer-contact-info-content'>\n                <div className='final-customer-name'>\n                  <Icon name='people' />\n                  <span> {customerName} </span>\n                </div>\n                <div className='final-customer-phone'>\n                  <Icon name='phone' />\n                  <span> {phoneNumber} </span>\n                </div>\n              </div>\n            </div>\n            <div className='final-message'>\n              <span> {finalMessage} </span>\n            </div>\n          </div>\n        }\n\n        {\n          this.state.isComplete === false &&\n          <div className='show-notification'>\n            {\n              this.valid === true &&\n              <div className='notification-message'>\n                <span>\n                  Bạn đã hoàn thành thủ tục nhập thông tin\n                 <br />\n                 Vui lòng nhấn xác nhận để  gửi tin\n               </span>\n                <div onClick={this.onFinalSubmit} className='submit-button-final'>\n                  <span> Xác nhận </span>\n                </div>\n              </div>\n            }\n            {\n              this.valid === false &&\n              <div className='notification-message-error'>\n                <span >\n                  Bạn chưa hoàn thành thủ tục nhập thông tin\n                  Vui lòng kiểm tra lại\n               </span>\n              </div>\n            }\n            <img src={finishDecoration} alt='finish decoration' />\n          </div>\n        }\n        {\n          this.state.isComplete === true &&\n          <div className='everything-done'>\n            <h3> Hoàn tất gửi tin nhắn !</h3>\n            <img src={finishDecoration} alt='done' />\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    customerInfo: state.contactReducer,\n    messageDone: state.messageReducer\n  }\n}\n\nexport default connect(mapStateToProps, null)(Complete);\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\n// component\nimport Information from './views/Information'\nimport Template from './views/Template'\nimport Complete from './views/Complete'\n\nconst routes = [\n  {\n    path: '/message',\n    exact: true,\n    main: () => <Information />\n  },\n  {\n    path: '/template',\n    exact: true,\n    main: () => <Template />\n  },\n  {\n    path: '/complete',\n    exact: true,\n    main: () => <Complete />\n  }\n]\n\nlet activeRoute = () => {\n  return (\n    <Switch>\n      {\n        routes.map((route, index) => {\n          return <Route component={route.main} path={route.path} exact={route.exact} key={index} />\n        })\n      }\n    </Switch>\n  )\n}\n\nexport default activeRoute;","import React, { PureComponent } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport Navigation from './general/Navigation'\nimport activeRoute from '../routes'\n\nclass App extends PureComponent {\n\n  render() {\n    return (\n      <Router>\n        <React.Fragment>\n          <Navigation>\n          </Navigation>\n        </React.Fragment>\n        {\n          activeRoute()\n        }\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","import * as actionType from '../constants/actionType'\n\nconst INIT = {\n  customerName: '',\n  phoneNumber: ''\n}\n\nexport default (state = INIT, action) => {\n\n  switch (action.type) {\n    case actionType.completeContact:\n      return {\n        customerName: action.payload.customerName,\n        phoneNumber: action.payload.phoneNumber\n      }\n    default:\n      return state\n  }\n}\n\n","import * as actionType from '../constants/actionType'\n\nconst INIT = {\n  lastMessage: '',\n}\n\nexport default (state = INIT, action) => {\n\n  switch (action.type) {\n    case actionType.completeMessage:\n      return {\n        lastMessage: action.payload\n      }\n    default:\n      return state\n  }\n}\n\n","import * as actionType from '../constants/actionType'\n\nconst INIT = {\n  stepActive: 1\n}\n\nexport default (state = INIT, action) => {\n\n  switch (action.type) {\n    case actionType.switchStep:\n\n      return {\n        stepActive: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\n","import * as actionType from '../constants/actionType'\n\nconst INIT = {\n  smsTemplates: [],\n}\n\nexport default (state = INIT, action) => {\n  switch (action.type) {\n    case actionType.showTemplate:\n      return {\n        smsTemplates: action.payload\n      }\n    default:\n      return state\n  }\n}\n\n","import { combineReducers } from 'redux'\nimport contactReducer from './contactReducer'\nimport messageReducer from './messageReducer'\nimport stepReducer from './stepReducer'\nimport templateReducer from './templateReducer'\n\nexport default combineReducers({\n  contactReducer,\n  messageReducer,\n  stepReducer,\n  templateReducer\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App'\nimport reducer from './reducers/index'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport './index.css'\n\nconst store = createStore(reducer)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}